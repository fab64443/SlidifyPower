stat_function(fun=limitRange(dnorm, -0.5, 0.5, 0, 1), geom="area", fill="red", alpha=0.5)
dat <- with(density(rnorm(100)), data.frame(x, y))
ggplot(dat, aes(x=x, y=y)) +
layer(geom = "area", mapping = aes(x = limitRange(dnorm, -0.5, 0.5, 0, 1)),
geom_params = list(fill = "red", alpha = 0.5))
dat <- with(density(rnorm(100)), data.frame(x, y))
ggplot(dat, aes(x=x, y=y)) +
layer(geom = "area", mapping = aes(x = limitRange(dnorm, -0.5, 0.5, 0, 1)),
geom_params = list(fill = "red", alpha = 0.5)) +
scale_y_continuous(limits = c(0, max(dat$y))) +
)
dat <- with(density(rnorm(100)), data.frame(x, y))
ggplot(dat, aes(x=x, y=y)) +
layer(geom = "area", mapping = aes(x = limitRange(dnorm, -0.5, 0.5, 0, 1)),
geom_params = list(fill = "red", alpha = 0.5)) +
scale_y_continuous(limits = c(0, max(dat$y)))
dat <- with(density(rnorm(100)), data.frame(x, y))
ggplot(dat, aes(x=x, y=y)) +
layer(geom = "area", mapping = aes(x = ifelse(x>-0.5 & x<0.5 , x, 0)),
geom_params = list(fill = "red", alpha = 0.5)) +
scale_y_continuous(limits = c(0, max(dat$y)))
dat <- with(density(rnorm(100)), data.frame(x, y))
ggplot(dat, aes(x=x, y=y)) +
layer(geom = "area", mapping = aes(x = ifelse(x>-0.1 & x<0.1 , x, 0)),
geom_params = list(fill = "red", alpha = 0.5)) +
scale_y_continuous(limits = c(0, max(dat$y)))
?round
round(1.18,2)
round(1.18,1)
round(1.11,1)
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(x>min & x<max, fun(round(x,1), mean=mean, sd=sd), 0)
return(y)
}
}
mu0=30
mua=31
sigma=6
n=30
alpha=0.05
zcrit1 = mu0 + qnorm(alpha)*sigma/sqrt(n)        # left tail
zcrit2 = mu0 + qnorm(1-alpha)*sigma/sqrt(n)      # right tail
xmin = 25
xmax = 35
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(x>min & x<max, fun(x, mean=mean, sd=sd), 0)
return(round(y,1))
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(x>min & x<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(x>min & x<max, fun(round(x+0.1,1), mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x,1)>min & round(x,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x,1)>min & round(x,1)<max, fun(x, mean=mean, sd=sd), 0)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x,1)<max, fun(x, mean=mean, sd=sd), 0)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x+0.1,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x-0.1,1)>min & round(x+0.1,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x+0.1,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x-0.1,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2
runApp()
limitRange <- function(fun, min, max, mean=0, sd=1) {
function(x) {
y = ifelse(round(x+0.1,1)>min & round(x-0.1,1)<max, fun(x, mean=mean, sd=sd), NA)
return(y)
}
}
mu0=30
mua=31
sigma=6
n=30
alpha=0.05
zcrit1 = mu0 + qnorm(alpha)*sigma/sqrt(n)        # left tail
zcrit2 = mu0 + qnorm(1-alpha)*sigma/sqrt(n)      # right tail
xmin = 25
xmax = 35
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_discrete(name="Title",labels=c("A","B","C"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"), name="Experimental\nCondition",breaks=c("ctrl", "trt1", "trt2"), labels=c("Control", "Treatment 1", "Treatment 2"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_colour_manual("Lgend title", values = c("red", "blue", "green", "orange"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red"), alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue"), alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_colour_manual("Lgend title", values = c("red", "blue"))
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red"), alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue"), alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_colour_manual("Lgend title", values = c("red", "blue"))
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red"), alpha=0.5)   # type I error
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)   # type I error
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue"), alpha=0.5)  # no type II error
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)  # no type II error
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Lgend title", values = c("red", "blue"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Area", values = c("Type I error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Area", values = c("A", "B"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Area", labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_discrete("Area", labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_discrete("Area", labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Area", values=c("light red","light blue"), labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
?colors
demo("colors")
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_fill_manual("Area", values=c("lightred","lightblue"), labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
log1plusx <- function(x) log(1+x)
self <- function(x) x
ggplot(data.frame(x=c(-0.25, 0.25)), aes(x=x)) +
geom_path(aes(colour="red"), stat="function", fun=log1plusx)+
geom_path(aes(colour="blue"), stat="function", fun=self) +
scale_colour_identity("Function", guide="legend",
labels = c("log1plusx", "self"),
breaks = c("red", "blue"))
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
legend = scale_color_manual("Area", values=c("red","blue"), labels=c("Type I Error", "Power"))
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels+legend
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", aes(fill="red", alpha=0.5))
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", aes(fill="blue", alpha=0.5))
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.5)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.5)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(title="Normal distribution", x="mu", y="density")
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels
g = ggplot(data.frame(x=c(xmin,xmax)), aes(x=x))
norm1 = stat_function(fun=dnorm, geom="line", args=list(mean=mu0, sd=sigma/sqrt(n)), size=1, col="red")
norm2 = stat_function(fun=dnorm, geom="line", args=list(mean=mua, sd=sigma/sqrt(n)), size=1, col="blue")
alpha1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.3)
alpha2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mu0, sigma/sqrt(n)), geom="area", fill="red", alpha=0.3)
power1 = stat_function(fun=limitRange(dnorm, xmin, zcrit1, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.3)
power2 = stat_function(fun=limitRange(dnorm, zcrit2, xmax, mua, sigma/sqrt(n)), geom="area", fill="blue", alpha=0.3)
xline1 = geom_vline(xintercept=zcrit1, size=1)
xline2 = geom_vline(xintercept=zcrit2, size=1)
labels = labs(x="mu", y="density")
g+norm1+norm2+alpha1+alpha2+power1+power2+xline1+xline2+labels
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
round(c(1.23,5.67),1)
round(c(1.23,5.67),2)
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
round("--",1)
round("--",1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
deployApp()
libray(slidify)
library(slidify)
getwd()
setwd("E:/Coursera/DataScience/course09/data")
author("SlidifyPower")
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
publish_github('https://github.com/fab64443/SlidifyPower.git','fab64443')
publish_github('SlidifyPower','fab64443')
?publish_github
publish_github('SlidifyPower','fab64443')
getwd()
